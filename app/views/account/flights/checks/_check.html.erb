<% team = @team || @team %>
<% context ||= team %>
<% collection ||= :flights_checks %>
<% hide_actions ||= false %>
<% hide_back ||= false %>


<%# to jive with Check and Retreat, for all instances of the word Check here, its really a retreat %>
<% with_attribute_settings object: check do %>
  <tr data-id="<%= check.id %>">
    <%= render "shared/tables/checkbox", object: check %>
    <td>
      <% if check.organization_id.present? %>
       <%= render 'shared/attributes/belongs_to', attribute: :organization, url: [:account, check] %>
      <% else %>
        <%= link_to check.name, url: [:account, Retreat.first] %><%= check.internal %>
      <% end %>   
      <br/>
      <%= check.planners.present? ? check.planners.map { |p| p.full_name }.to_sentence : "Not Assigned" %>
      
    </td>
    <td><%= check.arrival.strftime("%B") if check.arrival.present? %></td>
    <td><%= check.arrival.strftime("%Y") if check.arrival.present? %></td>
    <td><%= check.arrival.strftime("%A %B #{check.arrival.day.ordinalize}") if check.arrival.present? %><br/><%= check.departure.strftime("%A %B #{check.departure.day.ordinalize}") if check.arrival.present? %></td>
    <td>
      <%= check.locations.map { |l| l.name }.to_sentence %><br/>
      <%= check.calculate_days_before > 0 ? pluralize(check.calculate_days_before, "days") + " until arrival" : "Past Event" %>
    </td>
    <td>
      <%= Medform.where(retreat_id: check.id).count %>/<%= check.contract_count %><br/>
      <%= number_to_percentage((Medform.where(retreat_id: check.id).count.to_f / check.contract_count) * 100, precision: 2) %>
        
      </td> 
    <td>
      <%= Flights::Check.joins(:flight).where(retreat_id: check.id).where(flights: { preflight: true }).where.not(completed_at: nil).count.to_s %>/<%= Flights::Check.joins(:flight).where(retreat_id: check.id).where(flights: { preflight: true }).count.to_s %>
    </td>

    <td>
      <% check.flights_checks.each do |check| %>
  <% if check.completed_at.present? %>
    <%= check.completed_at.strftime("%B #{check.completed_at.day.ordinalize}") %>
  <% else %>
    <% days_until_warning = (check.retreat.arrival.to_date - Date.current).to_i - check.flight.warning_alert.to_i %>
    <% if days_until_warning > 0 %>
       <% if days_until_warning < 7 %>
        <div class="text-yellow-500"><%= check.flight.name %> due in <%= pluralize(days_until_warning.abs, 'day') %></div>
       <% end %> 
    <% elsif days_until_warning == 0 %>
      <div class="text-red-500">Due Today</div>
    <% else %>  
      <div class="text-red-500"><%= check.flight.name %> <%= pluralize(days_until_warning.abs, 'day') %> overdue</div>
    <% end %> 
  <% end %> 
<% end %>

    </td>
    <%# ðŸš… super scaffolding will insert new fields above this line. %>
    <% if false %>
    <td class="buttons">
      <% unless hide_actions %>
        <% if can? :edit, check %>
          <%= link_to t('.buttons.shorthand.edit'), [:edit, :account, check], class: 'button-secondary button-smaller' %>
        <% end %>
        
        <%# ðŸš… super scaffolding will insert new action model buttons above this line. %>
      <% end %>
    </td>
    <% end %>
  </tr>
<% end %>
